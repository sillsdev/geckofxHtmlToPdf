<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{BF40573D-F7DA-4122-A610-526D3417F656}</ProjectGuid>
    <OutputType>WinExe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>GeckofxHtmlToPdf</RootNamespace>
    <AssemblyName>GeckofxHtmlToPdf</AssemblyName>
    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
    <RestorePackages>true</RestorePackages>
    <PackagesConfig Condition="'$(OS)'=='Windows_NT'">$(MSBuildProjectDirectory)\packages.config</PackagesConfig>
    <PackagesConfig Condition="'$(OS)'!='Windows_NT'">$(MSBuildProjectDirectory)/Linux/packages.config</PackagesConfig>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>..\output\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>..\output\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x86'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>..\output\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x86'">
    <OutputPath>..\output\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Geckofx-Core" Condition="'$(OS)'=='Windows_NT' AND '$(Platform)'=='x86'">
      <HintPath>..\packages\Geckofx60.32.60.0.50\lib\net45\Geckofx-Core.dll</HintPath>
    </Reference>
    <Reference Include="Geckofx-Winforms" Condition="'$(OS)'=='Windows_NT' AND '$(Platform)'=='x86'">
      <HintPath>..\packages\Geckofx60.32.60.0.50\lib\net45\Geckofx-Winforms.dll</HintPath>
    </Reference>
    <Reference Include="Geckofx-Core" Condition="'$(OS)'=='Windows_NT' AND '$(Platform)'!='x86'">
      <HintPath>..\packages\Geckofx60.64.60.0.50\lib\net45\Geckofx-Core.dll</HintPath>
    </Reference>
    <Reference Include="Geckofx-Winforms" Condition="'$(OS)'=='Windows_NT' AND '$(Platform)'!='x86'">
      <HintPath>..\packages\Geckofx60.64.60.0.50\lib\net45\Geckofx-Winforms.dll</HintPath>
    </Reference>
    <!-- Linux is now 64-bit only in essence, so we can use HintPath for Geckofx60 assemblies -->
    <Reference Include="Geckofx-Core" Condition="'$(OS)'!='Windows_NT'">
      <HintPath>..\packages\Geckofx60.64.Linux.60.0.51\lib\net40\Geckofx-Core.dll</HintPath>
    </Reference>
    <Reference Include="Geckofx-Winforms" Condition="'$(OS)'!='Windows_NT'">
      <HintPath>..\packages\Geckofx60.64.Linux.60.0.51\lib\net40\Geckofx-Winforms.dll</HintPath>
    </Reference>
    <Reference Include="PdfSharp, Version=1.50.5147.0, Culture=neutral, PublicKeyToken=f94615aa0424f9eb, processorArchitecture=MSIL">
      <HintPath>..\packages\PDFsharp.1.50.5147\lib\net20\PdfSharp.dll</HintPath>
    </Reference>
    <Reference Include="PdfSharp.Charting, Version=1.50.5147.0, Culture=neutral, PublicKeyToken=f94615aa0424f9eb, processorArchitecture=MSIL">
      <HintPath>..\packages\PDFsharp.1.50.5147\lib\net20\PdfSharp.Charting.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.VisualBasic" Condition="'$(OS)'=='Windows_NT'" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="Args">
      <HintPath>..\lib\Args.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="ConversionOrder.cs" />
    <Compile Include="ConversionProgress.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Include="ConversionProgress.Designer.cs">
      <DependentUpon>ConversionProgress.cs</DependentUpon>
    </Compile>
    <Compile Include="GeckofxHtmlToPDFComponent.cs">
      <SubType>Component</SubType>
    </Compile>
    <Compile Include="GeckofxHtmlToPDFComponent.Designer.cs">
      <DependentUpon>GeckofxHtmlToPDFComponent.cs</DependentUpon>
    </Compile>
    <Compile Include="MemoryManagement.cs" />
    <Compile Include="Program.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="App.config" />
    <None Include="Firefox\omni.ja" />
    <None Include="Linux\packages.config" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="ConversionProgress.resx">
      <DependentUpon>ConversionProgress.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="GeckofxHtmlToPDFComponent.resx">
      <DependentUpon>GeckofxHtmlToPDFComponent.cs</DependentUpon>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <Content Include="Firefox\AccessibleHandler.dll" />
    <Content Include="Firefox\AccessibleMarshal.dll" />
    <Content Include="Firefox\breakpadinjector.dll" />
    <Content Include="Firefox\d3dcompiler_47.dll" />
    <Content Include="Firefox\freebl3.dll" />
    <Content Include="Firefox\IA2Marshal.dll" />
    <Content Include="Firefox\lgpllibs.dll" />
    <Content Include="Firefox\libEGL.dll" />
    <Content Include="Firefox\libGLESv2.dll" />
    <Content Include="Firefox\mozavcodec.dll" />
    <Content Include="Firefox\mozavutil.dll" />
    <Content Include="Firefox\mozglue.dll" />
    <Content Include="Firefox\nss3.dll" />
    <Content Include="Firefox\nssckbi.dll" />
    <Content Include="Firefox\nssdbm3.dll" />
    <Content Include="Firefox\plugin-container.exe" />
    <Content Include="Firefox\plugin-hang-ui.exe" />
    <Content Include="Firefox\qipcap.dll" />
    <Content Include="Firefox\softokn3.dll" />
    <Content Include="Firefox\xul.dll" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="BeforeResolveReferences" Condition="'$(OS)'!='Windows_NT'">
    <!-- copy the appropriate Geckofx files to the output directory, first creating the directory if necessary -->
    <!-- this cannot be done in BeforeBuild, because the nuget download occurs as part of Build after BeforeBuild -->
    <Exec Command="mkdir -p $(OutDir)" />
    <Exec Command="rm -rf $(OutDir)Firefox" />
    <Exec Command="find $(SolutionDir)packages/Geckofx60.64.Linux.60.0.51 -name 'Geckofx-*.*' -exec cp -pvn '{}' $(OutDir) ';' &amp;&amp; find $(SolutionDir)packages/Geckofx60.64.Linux.60.0.51 -name Firefox* -type d -exec cp -pRvn '{}' $(OutDir)/Firefox ';'" />
  </Target>
  <PropertyGroup Condition="'$(OS)'=='Windows_NT'">
    <PostBuildEvent Condition="'$(VS100COMNTOOLS)'!=''">"$(VS100COMNTOOLS)..\..\VC\bin\editbin.exe" /largeaddressaware "$(TargetPath)"</PostBuildEvent>
    <PostBuildEvent Condition="'$(VS110COMNTOOLS)'!=''">"$(VS110COMNTOOLS)..\..\VC\bin\editbin.exe" /largeaddressaware "$(TargetPath)"</PostBuildEvent>
    <PostBuildEvent Condition="'$(VS120COMNTOOLS)'!=''">"$(VS120COMNTOOLS)..\..\VC\bin\editbin.exe" /largeaddressaware "$(TargetPath)"</PostBuildEvent>
  </PropertyGroup>
  <PropertyGroup>
    <PostBuildEvent Condition="'$(OS)'=='Windows_NT'">
IF  EXIST  "$(DevEnvDir)..\tools\vsdevcmd.bat"  (CALL  "$(DevEnvDir)..\tools\vsdevcmd.bat") ELSE (IF  EXIST  "%25VS140COMNTOOLS%25"  (CALL  "%25VS140COMNTOOLS%25vsvars32.bat") ELSE (IF  EXIST  "%25VS120COMNTOOLS%25"  (CALL  "%25VS120COMNTOOLS%25vsvars32.bat") ELSE (IF  EXIST  "%25VS110COMNTOOLS%25"  (CALL  "%25VS110COMNTOOLS%25vsvars32.bat") ELSE (IF  EXIST  "%25VS100COMNTOOLS%25"  CALL  "%25VS100COMNTOOLS%25vsvars32.bat"))))

editbin.exe /largeaddressaware "$(TargetPath)"</PostBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it.
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>